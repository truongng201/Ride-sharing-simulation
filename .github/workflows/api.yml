name: Project Ride Sharing Simulation api config pipeline

on:
  push:
    branches:
      - main

jobs:
  check_folder_api_changed:
    name: Check if api folder changed
    runs-on: ubuntu-latest
    outputs:
      is_changed: ${{ steps.changes.outputs.api }}

    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            api:
              - 'api/**'

      # run only if "api" files were changed
      - name: api is changed
        if: steps.changes.outputs.api == 'true'
        run: echo "Folder api has changed"

      # run only if "api" files were not changed
      - name: api is not changed
        if: steps.changes.outputs.api == 'false'
        run: echo "Folder api has not changed"

  build_and_push:
    name: Build and Push Server Docker Image
    runs-on: ubuntu-latest
    needs: [check_folder_api_changed]
    if: needs.check_folder_api_changed.outputs.is_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Add application.yml to api
        run: |
          echo "${{ secrets.API_APPLICATION }}" > api/src/main/resources/application.yml

      - name: Build Api Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME}}/${{ secrets.DOCKERHUB_REPOSITORY}}-api:latest ./api

      - name: Push Api Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME}}/${{ secrets.DOCKERHUB_REPOSITORY}}-api:latest

  pull_and_run_on_droplet:
    name: Pull Config and Run Docker Image on Droplet
    needs: [build_and_push]
    if: needs.check_folder_api_changed.outputs.is_changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh/
          cd ~/.ssh/ 
          touch id_rsa && touch known_hosts && chmod 600 id_rsa
          echo "${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa

      - name: Add Droplet to known hosts
        run: ssh-keyscan ${{ secrets.SERVER_IP_ADDRESS}} >> ~/.ssh/known_hosts

      - name: Pull and run Docker images on Droplet
        run: |
          ssh ${{ secrets.SERVER_USER}}@${{ secrets.SERVER_IP_ADDRESS}} 'docker pull ${{ secrets.DOCKERHUB_USERNAME}}/${{ secrets.DOCKERHUB_REPOSITORY}}-api:latest'
          ssh ${{ secrets.SERVER_USER}}@${{ secrets.SERVER_IP_ADDRESS}} 'docker-compose up --build -d --force-recreate --remove-orphans api'
